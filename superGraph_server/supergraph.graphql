
schema
  @core(feature: "https://specs.apollo.dev/core/v0.2"),
  @core(feature: "https://specs.apollo.dev/join/v0.1", for: EXECUTION)
{
  query: Query
}

directive @core(as: String, feature: String!, for: core__Purpose) repeatable on SCHEMA

directive @join__field(graph: join__Graph, provides: join__FieldSet, requires: join__FieldSet) on FIELD_DEFINITION

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @join__owner(graph: join__Graph!) on INTERFACE | OBJECT

directive @join__type(graph: join__Graph!, key: join__FieldSet) repeatable on INTERFACE | OBJECT

type Categoria {
  id: ID!
  nome: String!
  produtos: [Produto!]!
}

type Produto {
  categoria: Categoria
  id: ID!
  img: String!
  nome: String!
  preco: Float!
}

type Query {
  categoria(id: ID!): Categoria @join__field(graph: PRODUTOS)
  categorias: [Categoria!]! @join__field(graph: PRODUTOS)
  produto(id: ID!): Produto @join__field(graph: PRODUTOS)
  produtos: [Produto!]! @join__field(graph: PRODUTOS)
  usuario(id: ID!): Usuario @join__field(graph: USUARIOS)
  usuarios: [Usuario!]! @join__field(graph: USUARIOS)
}

type Usuario {
  email: String!
  id: ID!
  nome: String!
}

enum core__Purpose {
  """
  `EXECUTION` features provide metadata necessary to for operation execution.
  """
  EXECUTION

  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY
}

scalar join__FieldSet

enum join__Graph {
  PRODUTOS @join__graph(name: "produtos" url: "http://localhost:4001")
  USUARIOS @join__graph(name: "usuarios" url: "http://localhost:4000")
}
